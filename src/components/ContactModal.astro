---
---

<div id="contact-modal" class="modal">
  <div class="modal-content">
    <span class="close-button">&times;</span>
    <h2>Contactez-nous</h2>
    <form id="contact-form" novalidate>
      <div class="form-group">
        <label for="name">Nom <span class="required">*</span></label>
        <input type="text" id="name" name="name" required>
      </div>
      <div class="form-group">
        <label for="email">Email <span class="required">*</span></label>
        <input type="email" id="email" name="email" required>
      </div>
      <div class="form-group">
        <label for="company">Entreprise <span class="required">*</span></label>
        <input type="text" id="company" name="company" required>
      </div>
      <div class="form-group">
        <label for="message">Message <span class="required">*</span></label>
        <textarea id="message" name="message" rows="4" required></textarea>
      </div>
      <button type="submit" class="submit-button">Envoyer</button>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('contact-modal');
    const closeButton = document.querySelector('.close-button');
    const contactForm = document.getElementById('contact-form');
    let formValidated = false;
    
    // Listen for custom event to open modal
    document.addEventListener('open-contact-modal', () => {
      modal.classList.add('active');
      document.body.style.overflow = 'hidden'; // Prevent scrolling when modal is open
      formValidated = false; // Reset validation state when opening modal
    });
    
    // Close modal when clicking the close button
    closeButton.addEventListener('click', () => {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    });
    
    // Close modal when clicking outside the modal content
    window.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('active');
        document.body.style.overflow = '';
      }
    });
    
    // Handle form submission
    contactForm.addEventListener('submit', (e) => {
      e.preventDefault();
      formValidated = true;
      
      // Add class to form to enable validation styling
      contactForm.classList.add('validated');
      
      // Check if form is valid
      const isValid = contactForm.checkValidity();
      
      if (!isValid) {
        // If form is invalid, highlight the first invalid field
        const firstInvalidField = contactForm.querySelector(':invalid');
        if (firstInvalidField) {
          firstInvalidField.focus();
        }
        return;
      }
      
      // If form is valid, proceed with submission
      const formData = new FormData(contactForm);
      const formValues = Object.fromEntries(formData.entries());
      
      console.log('Form submitted:', formValues);
      
      // Show success message
      contactForm.innerHTML = `
        <div class="success-message">
          <h3>Merci pour votre message!</h3>
          <p>Nous vous répondrons dans les plus brefs délais.</p>
        </div>
      `;
      
      // Close modal after 3 seconds
      setTimeout(() => {
        modal.classList.remove('active');
        document.body.style.overflow = '';
        
        // Reset form after it's hidden
        setTimeout(() => {
          contactForm.reset();
          contactForm.classList.remove('validated');
          formValidated = false;
        }, 300);
      }, 3000);
    });
  });
</script>

<style>
  .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 2000;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .modal.active {
    display: flex;
    opacity: 1;
  }
  
  .modal-content {
    background-color: white;
    padding: 2rem;
    border-radius: 8px;
    width: 90%;
    max-width: 500px;
    position: relative;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    transform: translateY(-20px);
    transition: transform 0.3s ease;
  }
  
  .modal.active .modal-content {
    transform: translateY(0);
  }
  
  .close-button {
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 1.5rem;
    cursor: pointer;
    color: #777;
    transition: color 0.3s ease;
  }
  
  .close-button:hover {
    color: #333;
  }
  
  h2 {
    margin-top: 0;
    margin-bottom: 1.5rem;
    color: var(--text-color);
    font-size: 1.5rem;
    font-weight: 600;
  }
  
  .form-group {
    margin-bottom: 1.25rem;
  }
  
  label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: var(--text-color);
  }
  
  .required {
    color: #e74c3c;
    margin-left: 2px;
  }
  
  input, textarea {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-family: 'Inter', sans-serif;
    font-size: 1rem;
    transition: border-color 0.3s ease;
  }
  
  input:focus, textarea:focus {
    outline: none;
    border-color: var(--primary-color);
  }
  
  /* Only show invalid styling after form validation attempt */
  .validated input:invalid,
  .validated textarea:invalid {
    border-color: #e74c3c;
  }
  
  .submit-button {
    background: var(--accent-gradient);
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    font-weight: 500;
    cursor: pointer;
    transition: transform 0.3s ease, opacity 0.3s ease;
    width: 100%;
  }
  
  .submit-button:hover {
    opacity: 0.9;
    transform: translateY(-2px);
  }
  
  .success-message {
    text-align: center;
    padding: 1rem;
  }
  
  .success-message h3 {
    color: var(--primary-color);
    margin-bottom: 0.5rem;
  }
</style>
